openapi: 3.0.0
info:
  title: CRUD documentation
  description: Documentaion for product market api
  license: 
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  version: 0.0.1
servers:
  - url: http://localhost:3000/api/v1/
    description: dev server
tags:
  - name: Clients
  - name: Products
  - name: Suppliers
  - name: Images
paths:
  /api/v1/clients:
    get:
      tags:
        - Clients
      summary: Retrieve all clients
      operationId: getAllClients
      parameters:
        - name: limit
          in: query
          description: Maximum number of clients to retrieve
          schema:
            type: integer
            example: 10
        - name: offset
          in: query
          description: Number of clients to skip
          schema:
            type: integer
            example: 0
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Clients"
        'default':
          description: Something went wrong
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      tags:
        - Clients
      summary: Add client
      operationId: addClient
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Client"
      responses:
        '201':
          description: Successful added new client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Clients"
        '400':
          description: Bad request (e.g., invalid parameters)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        'default':
          description: Somthing went wrong
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/v1/clients/search:
    get:
      tags:
        - Clients
      summary: Search client by name and surname
      operationId: searchClientByNameAndSurname
      parameters: 
        - name: client_name
          in: query
          required: true
          description: Client's first name
          schema:
            type: string
            example: Yura
        - name: client_surname
          in: query
          required: true
          description: Client's last name
          schema:
            type: string
            example: Ignatev
      responses:
        '200':
          description: Successful responses
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Clients"
        '404':
          description: Client not found
        'default':
          description: Somthing went wrong
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/v1/clients/{id}:
    delete:
      tags:
        - Clients
      summary: Delete client by identificator
      operationId: deleteClientById
      parameters:
        - name: id
          in: path
          required: true
          description: Client indentificator
          schema:
            type: integer
            format: int64
            example: 0
      responses:
        '204':
          description: Successful delete
          content:
            application/json: {}
        '400':
          description: Bad request (e.g., invalid id)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '404':
          description: Client not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        'default':
          description: Somthing went wrong
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/v1/clients/{id}/address:
    patch:
      tags:
        - Clients
      summary: Change a address id parameter by a given new id parameter
      operationId: changeAddressIdParameter
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the client to modify
          schema:
            type: integer
            format: int64
            example: 0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - address_id
              properties:
                address_id:
                  type: integer
                  format: int64
                  description: New address id to modify current client
                  example: 5
      responses:
        '200':
          description: Address successfully changed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Clients"
        '400':
          description: Bad request (e.g., invalid address id)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '404':
          description: Client not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/v1/products:
    get:
      tags:
        - Products
      summary: Retrieve all product
      operationId: getAllProduct
      parameters:
        - name: limit
          in: query
          description: Maximum number of product to retrieve
          schema:
            type: integer
            example: 10
        - name: offset
          in: query
          description: Number of product to skip
          schema:
            type: integer
            example: 0
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Products"
        'default':
          description: Something went wrong
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      tags:
        - Products
      summary: Add product
      operationId: addProduct
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        '201':
          description: Successfully added new product
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Products"
        '400':
          description: Bad request (e.g., invalid prise, invalid supplier_id and so on)
        'default':
          description: Somthing went wrong
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/v1/products/{id}:
    get:
      tags:
        - Products
      summary: Get product by id
      operationId: searchProductById
      parameters: 
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 0
      responses:
        '200':
          description: Successful responses
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Products"
        '400':
          description: Bad request (e.g., invalid id)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        'default':
          description: Somthing went wrong
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - Products
      summary: Delete product by identificator
      operationId: deleteProductById
      parameters:
        - name: id
          in: path
          required: true
          description: Product indentificator
          schema:
            type: integer
            format: int64
            example: 0
      responses:
        '204':
          description: Successfully delete
          content:
            application/json: {}
        '400':
          description: Bad request (e.g., invalid id)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        'default':
          description: Somthing went wrong
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/v1/products/{id}/decrease:
    patch:
      tags:
        - Products
      summary: Decrease a parameter by a given value
      operationId: decreaseParametr
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the product to modify
          schema:
            type: integer
            format: int64
            example: 0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - decrement_value
              properties:
                decrement_value:
                  type: integer
                  format: int64
                  description: The value by which to decrease the parameter
                  minimum: 0
                  example: 5
      responses:
        '200':
          description: Parameter successfully decreased
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                    example: 1
                  updated_value:
                    type: integer
                    format: int64
                    description: The updated value after the decrement
                    example: 95
        '400':
          description: Bad request (e.g., invalid decrement_value)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/v1/suppliers:
    get:
      tags:
        - Suppliers
      summary: Retrieve all suppliers
      operationId: getAllSuppliers
      parameters:
        - name: limit
          in: query
          description: Maximum number of suppliers to retrieve
          schema:
            type: integer
            example: 10
        - name: offset
          in: query
          description: Number of supplier to skip
          schema:
            type: integer
            example: 0
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Suppliers"
        'default':
          description: Something went wrong
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      tags:
        - Suppliers
      summary: Add supplier
      operationId: addSupplier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Supplier"
      responses:
        '201':
          description: Successfully added new supplier
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Suppliers"
        '400':
          description: Bad request (e.g., invalid address_id, invalid phone_number and so on)
        'default':
          description: Somthing went wrong
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/v1/suppliers/{id}:
    get:
      tags:
        - Suppliers
      summary: Get supplier by id
      operationId: searchSupplierById
      parameters: 
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 0
      responses:
        '200':
          description: Successful responses
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Suppliers"
        '400':
          description: Bad request (e.g., invalid id)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '404':
          description: Supplier not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        'default':
          description: Somthing went wrong
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - Suppliers
      summary: Delete supplier by identificator
      operationId: deleteSupplierById
      parameters:
        - name: id
          in: path
          required: true
          description: Supplier indentificator
          schema:
            type: integer
            format: int64
            example: 0
      responses:
        '204':
          description: Successfully delete
          content:
            application/json: {}
        '400':
          description: Bad request (e.g., invalid id)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '404':
          description: Supplier not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        'default':
          description: Somthing went wrong
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/v1/suppliers/{id}/changeAddress:
    patch:
      tags:
        - Suppliers
      summary: Change a address id parameter by a given value
      operationId: changeAddressParametr
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the supplier to modify
          schema:
            type: integer
            format: int64
            example: 0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - address_id
              properties:
                address_id:
                  type: integer
                  format: int64
                  description: The value by which to change the parameter
                  example: 5
      responses:
        '200':
          description: Parameter successfully changed
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                    example: 1
                  address_id:
                    type: integer
                    format: int64
                    description: The updated value after the update
                    example: 95
        '400':
          description: Bad request (e.g., invalid incoming id)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '404':
          description: Supplier not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/v1/images:
    post:
      tags:
        - Images
      summary: Add image
      operationId: addImage
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Image"
      responses:
        '201':
          description: Successfully added new image
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Images"
        '400':
          description: Bad request (e.g., invalid byte of arrey and so on)
        'default':
          description: Somthing went wrong
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/v1/images/{id}:
    get:
      tags:
        - Images
      summary: Get image by id
      operationId: searchImageById
      parameters: 
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 0
      responses:
        '200':
          description: Successful responses
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Images"
        '400':
          description: Bad request (e.g., invalid id)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '404':
          description: Image not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        'default':
          description: Somthing went wrong
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - Images
      summary: Delete image by identificator
      operationId: deleteImageById
      parameters:
        - name: id
          in: path
          required: true
          description: Image indentificator
          schema:
            type: integer
            format: int64
            example: 0
      responses:
        '204':
          description: Successfully delete
          content:
            application/json: {}
        '400':
          description: Bad request (e.g., invalid id)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '404':
          description: Image not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        'default':
          description: Somthing went wrong
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/v1/images/{id}/changeImage:
    patch:
      tags:
        - Images
      summary: Change a image
      operationId: changeImage
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the image to modify
          schema:
            type: integer
            format: int64
            example: 0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - image
              properties:
                image:
                  type: string
                  format: byte
                  description: New image to change current image
                  example: 5
      responses:
        '200':
          description: Image successfully changed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Images"
        '400':
          description: Bad request (e.g., invalid incoming id)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '404':
          description: Image not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/v1/images/products/{id}:
    get:
      tags:
        - Images
      summary: Getting an image of a specific product
      operationId: searchProductImage
      parameters: 
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 0
      responses:
        '200':
          description: Successful responses
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Images"
        '400':
          description: Bad request (e.g., invalid id)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '404':
          description: Product or Image not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        'default':
          description: Somthing went wrong
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Client:
      required:
        - client_name
        - client_surname
        - birthday
        - gender
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        client_name:
          type: string
          example: Yulia
        client_surname:
          type: string
          example: Ivanova
        birthday:
          type: string
          format: date
          example: 2001-09-01
        gender:
          type: string
          enum:
            - male
            - female
          description: Client gender
        registration_date:
          type: string
          format: date
          example: 2025-01-05T13:24:09Z
        address_id:
          type: integer
          format: int64
          example: 
    Clients:
      type: array
      items:
        $ref: "#/components/schemas/Client"
    Product:
      required:
        - name
        - category
        - price
        - available_stock
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 0
        name:
          type: string
          example: milk
        category:
          type: string
          example: dairy products
        price:
          type: number
          format: float
          example: 69.90
        available_stock:
          type: integer
          format: int64
          example: 300
        last_update_date:
          type: string
          format: date
          example: 2025-01-05T13:24:09Z
        supplier_id:
          type: integer
          format: int64
          example: 0
        image_id:
          type: string
          example: b8934265-5e08-47dd-a1c8-e67228a12bec
    Products:
      type: array
      items:
        $ref: "#/components/schemas/Product"
    Supplier:
      type: object
      required:
        - id
        - name
        - address_id
        - phone_number
      properties:
        id:
          type: integer
          format: int64
          example: 0
        name:
          type: string
          example: Lenta
        address_id:
          type: integer
          format: int64
          example: 0
        phone_number:
          type: string
          example: 8-800-555-35-35
    Suppliers:
      type: array
      items:
        $ref: "#/components/schemas/Supplier"
    Image:
      type: object
      required:
        - id
        - image
      properties:
        id:
          type: string
          example: 103561b0-cb69-11ef-9cd2-0242ac120002
        image:
          type: string
          format: byte
          example: 
    Images:
      type: array
      items:
        $ref: "#/components/schemas/Image"
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
        message:
          type: string
